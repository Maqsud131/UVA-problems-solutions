#include <bits/stdc++.h>
using namespace std;

int sr,sc,er,ec,r,c,b,su,t,st;

int main() {
	while(scanf("%d %d",&c,&r)==2){
		int gr[c+2][r+2][4];
        int col[c+2][r+2];
        int ti[501][2];
		for(int i=0;i<501;i++)ti[i][0]=ti[i][1]=0;
		for(int i=0;i<c+2;i++){
            for(int j=0;j<r+2;j++){
                col[i][j]=2147483646;
                for(int k=0;k<4;k++){
                    gr[i][j][k]=0;
                }
            }
        }
		
		for(int i=1;i<=c;i++){
            gr[i][1][1]=-1;
            gr[i][r][3]=-1;
		}
		for(int i=1;i<=r;i++){
            gr[1][i][0]=-1;
            gr[c][i][2]=-1;
        }
		
		scanf("%d",&b);
		for(int i=0;i<b;i++){
			scanf("%d %d %d %d",&sc,&sr,&ec,&er);
			if(sc==ec){
                if(sr<er)gr[sc+1][sr+1][3]=-1;
                else gr[sc+1][sr+1][1]=-1;
        	}else{
                if(sc<ec)gr[sc+1][sr+1][2]=-1;
                else gr[sc+1][sr+1][0]=-1;
        	}
		}
		
		scanf("%d",&su);
		for(int i=0;i<su;i++){
			scanf("%d %d %d",&t,&sc,&sr);
			ti[t][0]=sc+1;
			ti[t][1]=sr+1;
		}
		
		queue<int> q;
		q.push(1);
		q.push(1);
		col[1][1]=0;
		while(!q.empty()){
			sc=q.front();
			q.pop();
			sr=q.front();
			q.pop();
			//printf("%d %d\n",sc,sr);
			st=col[sc][sr]+1;
			if(gr[sc][sr][0]==0 && st<col[sc-1][sr]){
				t=st;
				col[sc-1][sr]=st;
                while(ti[t][0]==sc-1 && ti[t][1]==sr){
                	col[sc-1][sr]++;
                	t++;
                }
                q.push(sc-1);
                q.push(sr);
            }
            if(gr[sc][sr][1]==0 && st<col[sc][sr-1]){
                t=st;
				col[sc][sr-1]=st;
                while(ti[t][0]==sc && ti[t][1]==sr-1){
                	col[sc][sr-1]++;
                	t++;
                }
                q.push(sc);
                q.push(sr-1);
            }
            if(gr[sc][sr][2]==0 && st<col[sc+1][sr]){
                t=st;
				col[sc+1][sr]=st;
                while(ti[t][0]==sc+1 && ti[t][1]==sr){
                	col[sc+1][sr]++;
                	t++;
                }
                q.push(sc+1);
                q.push(sr);
            }
            if(gr[sc][sr][3]==0 && st<col[sc][sr+1]){
                t=st;
				col[sc][sr+1]=st;
                while(ti[t][0]==sc && ti[t][1]==sr+1){
                	col[sc][sr+1]++;
                	t++;
                }
                q.push(sc);
                q.push(sr+1);
            }
		}
		
		printf("%d\n",col[c][r]);
	}
	return 0;
}