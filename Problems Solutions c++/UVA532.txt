#include <bits/stdc++.h>
using namespace std;

int main() {
	int x,y,z,r,c,l,xs,ys,zs,xe,ye,ze,d;
	char ar[40];
	while(scanf("%d %d %d",&l,&r,&c)==3){
		if(r==0 && l==0 && c==0)break;
		int gr[r+2][c+2][l+2];
		for(int i=0;i<r+2;i++){
			for(int j=0;j<c+2;j++)gr[i][j][0]=gr[i][j][l+1]=-1;
		}
		for(int i=0;i<r+2;i++){
			for(int k=0;k<l+2;k++)gr[i][0][k]=gr[i][c+1][k]=-1;
		}
		for(int j=0;j<c+2;j++){
			for(int k=0;k<l+2;k++)gr[0][j][k]=gr[r+1][j][k]=-1;
		}
		
		for(int k=1;k<=l;k++){
			for(int i=1;i<=r;i++){
				scanf("%s",ar);
				for(int j=1;j<=c;j++){
					if(ar[j-1]=='.'){gr[i][j][k]=0;
					}else if(ar[j-1]=='#'){gr[i][j][k]=-1;
					}else if(ar[j-1]=='S'){
						xs=i;
						ys=j;
						zs=k;
						gr[i][j][k]=1;
					}else if(ar[j-1]=='E'){
						xe=i;
						ye=j;
						ze=k;
						gr[i][j][k]=0;
					}
				}
			}
		}
		
		queue<int> q;
		q.push(xs);
		q.push(ys);
		q.push(zs);
		bool t=false;
		while(!q.empty()){
			x=q.front();
			q.pop();
			y=q.front();
			q.pop();
			z=q.front();
			q.pop();
			if(x==xe && y==ye && z==ze){t=true;
				break;
			}
			d=gr[x][y][z]+1;
			if(gr[x-1][y][z]==0){
				gr[x-1][y][z]=d;
				q.push(x-1);
				q.push(y);
				q.push(z);
			}
			if(gr[x+1][y][z]==0){
				gr[x+1][y][z]=d;
				q.push(x+1);
				q.push(y);
				q.push(z);
			}
			if(gr[x][y-1][z]==0){
				gr[x][y-1][z]=d;
				q.push(x);
				q.push(y-1);
				q.push(z);
			}
			if(gr[x][y+1][z]==0){
				gr[x][y+1][z]=d;
				q.push(x);
				q.push(y+1);
				q.push(z);
			}
			if(gr[x][y][z-1]==0){
				gr[x][y][z-1]=d;
				q.push(x);
				q.push(y);
				q.push(z-1);
			}
			if(gr[x][y][z+1]==0){
				gr[x][y][z+1]=d;
				q.push(x);
				q.push(y);
				q.push(z+1);
			}
		}
		if(t==true)printf("Escaped in %d minute(s).\n",gr[x][y][z]-1);
		else printf("Trapped!\n");
	}
	return 0;
}