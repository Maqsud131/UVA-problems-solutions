#include <bits/stdc++.h>
using namespace std;

int main() {
	int n,w,x,e;
	while(scanf("%d",&n)==1){
		if(n==-1)break;
		vector<int> gr[n+1];
		int dt[n+1];
		int pa[n+1];
		int we[n+1];
		int col[n+1];
		int cy[n+1];
		for(int i=0;i<=n;i++){dt[i]=-2147483646;
			cy[i]=col[i]=0;
		}
		dt[1]=100;
		
		for(int i=1;i<=n;i++){
			scanf("%d %d",&w,&e);
			we[i]=w;
			for(int j=0;j<e;j++){
				scanf("%d",&x);
				gr[i].push_back(x);
			}
		}
		
		for(int i=0; i<n-1; i++){
			for(int k=1;k<=n;k++){
				for(int j=0;j<gr[k].size();j++){
					if(dt[gr[k][j]]< dt[k] + we[gr[k][j]] && dt[k]>0){
						dt[gr[k][j]] = dt[k] + we[gr[k][j]];
						pa[gr[k][j]]=k;
					}
				}
			}
		}
		
		if(dt[n]<1){
			for(int i=0; i<n-1; i++){
				for(int k=1;k<=n;k++){
					for(int j=0;j<gr[k].size();j++){
						if(dt[gr[k][j]]< dt[k] + we[gr[k][j]] && dt[k]>0){
							//printf("%d %d\n",v[j],u[j]);
							cy[gr[k][j]]=cy[k]=1;
							dt[gr[k][j]] = dt[k] + we[gr[k][j]];
							pa[gr[k][j]]=k;
						}
					//if(j==v.size())j=0;
					}
				}
			}
			
			bool tr=false;
			
			for(int i=1;i<=n;i++){
				if(cy[i]==1 && col[i]==0){
				//	printf("%d\n",x);
					queue<int> q;
					q.push(i);
					while(!q.empty()){
						x=q.front();
						if(x==n){tr=true;
							break;
						}
						q.pop();
						for(int l=0;l<gr[x].size();l++){
							if(col[gr[x][l]]==0){
								col[gr[x][l]]=1;
								q.push(gr[x][l]);
							}
						}
					}
				}
				if(tr==true)break;
			}
			if(tr==true)printf("winnable\n");
			else printf("hopeless\n");
		}else{printf("winnable\n");
		}
		
	}
	return 0;
}